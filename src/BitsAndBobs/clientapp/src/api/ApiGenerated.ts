//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v14.5.0.0 (NJsonSchema v11.4.0.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

/* eslint-disable */
// ReSharper disable InconsistentNaming



export interface UserContextResponse {
    readonly localDate: Date;
    readonly isAuthenticated: boolean;
    readonly username?: string | undefined;
    readonly emailAddress?: string | undefined;
}

export interface EmailResponse {
    readonly recipient: string;
    readonly type: string;
    readonly body: string;
    readonly sentAt: Date;
}

export interface ProblemDetails {
    readonly type?: string | undefined;
    readonly title?: string | undefined;
    readonly status?: number | undefined;
    readonly detail?: string | undefined;
    readonly instance?: string | undefined;

    [key: string]: any;
}

export interface HttpValidationProblemDetails extends ProblemDetails {
    errors?: { [key: string]: string[]; };

    [key: string]: any;
}

export interface RegisterRequest {
    readonly email?: string;
    readonly password?: string;
}

export interface AccessTokenResponse {
    readonly tokenType?: string;
    readonly accessToken?: string;
    readonly expiresIn?: number;
    readonly refreshToken?: string;
}

export interface LoginRequest {
    readonly email?: string;
    readonly password?: string;
    readonly twoFactorCode?: string | undefined;
    readonly twoFactorRecoveryCode?: string | undefined;
}

export interface RefreshRequest {
    readonly refreshToken?: string;
}

export interface ResendConfirmationEmailRequest {
    readonly email?: string;
}

export interface ForgotPasswordRequest {
    readonly email?: string;
}

export interface ResetPasswordRequest {
    readonly email?: string;
    readonly resetCode?: string;
    readonly newPassword?: string;
}

export interface TwoFactorResponse {
    readonly sharedKey?: string;
    readonly recoveryCodesLeft?: number;
    readonly recoveryCodes?: string[] | undefined;
    readonly isTwoFactorEnabled?: boolean;
    readonly isMachineRemembered?: boolean;
}

export interface TwoFactorRequest {
    readonly enable?: boolean | undefined;
    readonly twoFactorCode?: string | undefined;
    readonly resetSharedKey?: boolean;
    readonly resetRecoveryCodes?: boolean;
    readonly forgetMachine?: boolean;
}

export interface InfoResponse {
    readonly email?: string;
    readonly isEmailConfirmed?: boolean;
}

export interface InfoRequest {
    readonly newEmail?: string | undefined;
    readonly newPassword?: string | undefined;
    readonly oldPassword?: string | undefined;
}

export interface GetUserDetailsResponse {
    readonly emailAddress: string;
    readonly displayName: string;
    readonly firstName?: string | undefined;
    readonly lastName?: string | undefined;
}

export interface UpdateUserDetailsRequest {
    readonly displayName: string;
    readonly firstName?: string | undefined;
    readonly lastName?: string | undefined;
}

export interface GetAuctionsResponse {
    readonly auctions: SummaryAuctionResponse[];
}

export interface SummaryAuctionResponse {
    readonly id: string;
    readonly name: string;
    readonly description: string;
    readonly imageHref: string;
    readonly currentPrice: number;
    readonly numberOfBids: number;
    readonly endDate: Date;
    readonly sellerDisplayName: string;
}

export interface CreateAuctionResponse {
    readonly id: string;
}

export interface CreateAuctionRequest {
    readonly name: string;
    readonly description: string;
    readonly imageId: string;
    readonly initialPrice: number;
    readonly bidIncrement: number;
    readonly period: string;
}

export interface GetAuctionResponse {
    readonly id: string;
    readonly name: string;
    readonly description: string;
    readonly imageHref: string;
    readonly sellerDisplayName: string;
    readonly isOpen: boolean;
    readonly isClosed: boolean;
    readonly isCancelled: boolean;
    readonly isUserSeller: boolean;
    readonly isUserCurrentBidder: boolean;
    readonly initialPrice: number;
    readonly currentPrice: number;
    readonly currentBidderDisplayName?: string | undefined;
    readonly minimumBid: number;
    readonly numberOfBids: number;
    readonly bids?: BidDetails[] | undefined;
    readonly endDate: Date;
    readonly cancelledDate?: Date | undefined;
}

export interface BidDetails {
    readonly id: string;
    readonly amount: number;
    readonly bidderDisplayName: string;
    readonly bidDate: Date;
    readonly isUserBid: boolean;
    readonly isCurrentBid: boolean;
}

export interface AddBidResponse {
    readonly id: string;
}

export interface AddBidRequest {
    readonly auctionId: string;
    readonly amount: number;
}

export interface GetAuctionForRelistingResponse {
    readonly name: string;
    readonly description: string;
    readonly imageId: string;
    readonly imageHref: string;
    readonly initialPrice: number;
    readonly bidIncrement: number;
}

export interface AuctionImageResponse {
    readonly id: string;
    readonly href: string;
}

export interface GetUserAuctionsResponse {
    readonly auctions: UserAuction[];
}

export interface UserAuction {
    readonly id: string;
    readonly name: string;
    readonly imageHref: string;
    readonly currentPrice: number;
    readonly numberOfBids: number;
    readonly endDate: Date;
    readonly isOpen: boolean;
    readonly isClosed: boolean;
    readonly isCancelled: boolean;
    readonly cancelledDate?: Date | undefined;
    readonly isUserCurrentBidder: boolean;
    readonly userMaximumBid?: number | undefined;
}

export interface FileParameter {
    data: any;
    fileName: string;
}