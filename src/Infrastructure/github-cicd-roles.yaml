---
# aws cloudformation deploy --template-file ./src/Infrastructure/github-cicd-roles.yaml --stack-name github-cicd-roles --capabilities CAPABILITY_NAMED_IAM
AWSTemplateFormatVersion: "2010-09-09"
Description: OIDC IDP and associated Roles for GitHub Actions

Parameters:
  GitHubOrganization:
    Type: String
    Description: This is the root organization where repos are stored (Case Sensitive)
    Default: "marsupialmouse"

  RepositoryName:
    Type: String
    Description: The repo(s) these roles will have access to. (Use * for all Org Repos or wildcard)
    Default: "bitsandbobs"

Resources:
  GitHubOidcProvider:
    Type: AWS::IAM::OIDCProvider
    Properties:
      Url: https://token.actions.githubusercontent.com
      ClientIdList:
        - sts.amazonaws.com
      ThumbprintList:
        - 6938fd4d98bab03faadb97b34396831e3780aea1
      Tags:
        - Key: Name
          Value: GHA-OIDC-Provider

  RoleCfnDeploy:
    Type: AWS::IAM::Role
    Properties:
      RoleName: GHA-DeployCloudFormation
      Description: "Role used by GitHub Actions for CloudFormation deployments"
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action: sts:AssumeRoleWithWebIdentity
            Principal:
              Federated: !Ref GitHubOidcProvider
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: "sts.amazonaws.com"
              StringLike:
                token.actions.githubusercontent.com:sub: !Sub repo:${GitHubOrganization}/${RepositoryName}:*
      Policies:
        - PolicyName: CloudFormationDeployment
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: CloudFormationActions
                Effect: Allow
                Action:
                  - cloudformation:CreateStack
                  - cloudformation:UpdateStack
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeStacks
                  - cloudformation:ListStacks
                  - cloudformation:GetTemplateSummary
                  - cloudformation:ValidateTemplate
                  - cloudformation:DescribeStackEvents
                  - cloudformation:DescribeStackResource
                  - cloudformation:DescribeStackResources
                  - cloudformation:CreateChangeSet
                  - cloudformation:DescribeChangeSet
                  - cloudformation:DeleteChangeSet
                  - cloudformation:ExecuteChangeSet
                Resource: !Sub 'arn:${AWS::Partition}:cloudformation:*:${AWS::AccountId}:stack/*'
              # Allow passing IAM roles to CloudFormation
              - Sid: IAMPassRole
                Effect: Allow
                Action:
                  - iam:PassRole
                Resource: !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:role/*'
        - PolicyName: VPCCfnDeployment
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: VPCActions
                Effect: Allow
                Action:
                  - ec2:CreateVpc
                  - ec2:DeleteVpc
                  - ec2:DescribeVpcs
                  - ec2:ModifyVpcAttribute
                  - ec2:CreateSubnet
                  - ec2:DeleteSubnet
                  - ec2:DescribeSubnets
                  - ec2:ModifySubnetAttribute
                  - ec2:CreateInternetGateway
                  - ec2:DeleteInternetGateway
                  - ec2:AttachInternetGateway
                  - ec2:DetachInternetGateway
                  - ec2:DescribeInternetGateways
                  - ec2:CreateRouteTable
                  - ec2:DeleteRouteTable
                  - ec2:DescribeRouteTables
                  - ec2:CreateRoute
                  - ec2:DeleteRoute
                  - ec2:AssociateRouteTable
                  - ec2:DisassociateRouteTable
                  - ec2:CreateTags
                  - ec2:DeleteTags
                  - ec2:DescribeTags
                Resource:
                  - !Sub 'arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:vpc/*'
                  - !Sub 'arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:subnet/*'
                  - !Sub 'arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:internet-gateway/*'
                  - !Sub 'arn:${AWS::Partition}:ec2:*:${AWS::AccountId}:route-table/*'

        - PolicyName: S3CfnDeployment
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: S3Actions
                Effect: Allow
                Action:
                  - s3:CreateBucket
                  - s3:DeleteBucket
                  - s3:PutBucketPolicy
                  - s3:DeleteBucketPolicy
                  - s3:PutBucketPublicAccessBlock
                  - s3:PutBucketLogging
                  - s3:PutBucketOwnershipControls
                  - s3:PutBucketVersioning
                  - s3:PutEncryptionConfiguration
                  - s3:GetEncryptionConfiguration
                  - s3:PutLifecycleConfiguration
                  - s3:GetBucketLocation
                  - s3:GetBucketAcl
                  - s3:PutBucketAcl
                Resource:
                  - !Sub 'arn:${AWS::Partition}:s3:::*'
                  - !Sub 'arn:${AWS::Partition}:s3:::*/*'
        - PolicyName: CloudFrontCfnDeployment
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: CloudFrontActions
                Effect: Allow
                Action:
                  - cloudfront:CreateDistribution
                  - cloudfront:UpdateDistribution
                  - cloudfront:DeleteDistribution
                  - cloudfront:GetDistribution
                  - cloudfront:CreateKeyValueStore
                  - cloudfront:DeleteKeyValueStore
                  - cloudfront:DescribeKeyValueStore
                  - cloudfront:ListKeyValueStores
                  - cloudfront:CreateFunction
                  - cloudfront:DeleteFunction
                  - cloudfront:DescribeFunction
                  - cloudfront:UpdateFunction
                  - cloudfront:PublishFunction
                  - cloudfront:GetFunction
                  - cloudfront:CreateOriginAccessControl
                  - cloudfront:UpdateOriginAccessControl
                  - cloudfront:DeleteOriginAccessControl
                  - cloudfront:GetOriginAccessControl
                  - cloudfront:GetOriginAccessControlConfig
                  - cloudfront:ListOriginAccessControls
                  - cloudfront:TagResource
                Resource:
                  - !Sub 'arn:aws:cloudfront::${AWS::AccountId}:distribution/*'
                  - !Sub 'arn:aws:cloudfront::${AWS::AccountId}:origin-access-control/*'
                  - !Sub 'arn:aws:cloudfront::${AWS::AccountId}:key-value-store/*'
                  - !Sub 'arn:aws:cloudfront::${AWS::AccountId}:function/*'

  RoleAssetDeploy:
    Type: AWS::IAM::Role
    Properties:
      RoleName: GHA-DeployAssets
      Description: "Role used by GitHub Actions for artifact delivery"
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action: sts:AssumeRoleWithWebIdentity
            Principal:
              Federated: !Ref GitHubOidcProvider
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: "sts.amazonaws.com"
              StringLike:
                token.actions.githubusercontent.com:sub: !Sub repo:${GitHubOrganization}/${RepositoryName}:*
      Policies:
        - PolicyName: S3AssetDeploy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: S3Actions
                Effect: Allow
                Action:
                  - s3:ListBucket
                  - s3:GetObject
                  - s3:PutObject
                Resource:
                  - !Sub 'arn:${AWS::Partition}:s3:::*'
                  - !Sub 'arn:${AWS::Partition}:s3:::*/*'

  RoleVersionDeploy:
    Type: AWS::IAM::Role
    Properties:
      RoleName: GHA-DeployVersion
      Description: "Role used by GitHub Actions to update the active version of the application"
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action: sts:AssumeRoleWithWebIdentity
            Principal:
              Federated: !Ref GitHubOidcProvider
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: "sts.amazonaws.com"
              StringLike:
                token.actions.githubusercontent.com:sub: !Sub repo:${GitHubOrganization}/${RepositoryName}:*
      Policies:
        - PolicyName: CloudFrontDeployment
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: CloudFrontActions
                Effect: Allow
                Action:
                  - cloudfront-keyvaluestore:DescribeKeyValueStore
                  - cloudfront-keyvaluestore:PutKey
                Resource:
                  - !Sub 'arn:aws:cloudfront::${AWS::AccountId}:key-value-store/*'

Outputs:
  GitHubOidc:
    Description: "ARN of Github OIDC Provider"
    Value: !GetAtt GitHubOidcProvider.Arn

  RoleDeployCloudFormationARN:
    Description: "ARN of CloudFormation deployment role for GitHub Actions"
    Value: !GetAtt RoleCfnDeploy.Arn

  RoleDeployAssetsARN:
    Description: "ARN of asset deployment role for GitHub Actions"
    Value: !GetAtt RoleAssetDeploy.Arn

  RoleDeployVersionARN:
    Description: "ARN of asset deployment role for GitHub Actions"
    Value: !GetAtt RoleVersionDeploy.Arn
