name: Release

on:
  workflow_dispatch:
    inputs:
      environment:
        description: Environment to which the application will be deployed.
        default: 'Production'
        type: environment
        required: true
      version:
        description: The version (tag) to deploy. Leave blank to build and deploy a new version.
        type: string
        required: false

env:
  DeploymentRole: ${{ secrets.AWS_ROLE_ARN_DEPLOY }}
  DeliveryRole: ${{ secrets.AWS_ROLE_ARN_DELIVER }}
  Region: ${{ secrets.AWS_DEFAULT_REGION }}

jobs:
  setVersion:
    name: Set release version
    runs-on: ubuntu-latest
    if: ${{ !startsWith(inputs.version, 'v') }}
    outputs:
      version: ${{ steps.version.outputs.version_tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # needed for calculating the latest version
      - name: Increment version
        id: version
        uses: paulhatch/semantic-version@v5.4.0

  buildUi:
    name: Build UI
    runs-on: ubuntu-latest
    needs: setVersion
    defaults:
      run:
        working-directory: 'src/BitsAndBobs/clientapp'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'yarn'
          cache-dependency-path: src/BitsAndBobs/clientapp/yarn.lock
      - name: Install Node.js dependencies
        run: yarn install --immutable --immutable-cache --check-cache
      - name: Build
        run: yarn build
      # TODO: copy build output to S3

  deploy:
    name: Deploy to AWS
    runs-on: ubuntu-latest
    needs: [setVersion, buildUi]
    if: ${{ !failure() && !cancelled() }}
    permissions:
      id-token: write
      contents: read
    env:
      version: ${{ format('{0}{1}', inputs.version, needs.setVersion.outputs.version) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.version }}
      - name: Echo version
        run: echo "Version $version"
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.Region }}
          role-to-assume: ${{ env.DeploymentRole }}
          role-session-name: ${{ github.run_id }}
      - name: Deploy to CloudFormation
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: 'BitsAndBobs-${{ inputs.environment }}'
          template: src/Infrastructure/bitsandbobs.yaml
          parameter-overrides: 'Environment=${{ inputs.environment }}'
          no-fail-on-empty-changeset: '1'




